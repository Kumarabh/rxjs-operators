import { Component, OnInit } from '@angular/core';
import { Observable, Subject, interval, of, from } from 'rxjs';
import { delay, filter, map, mergeMap } from 'rxjs/operators';
import { HttpClient } from '@angular/common/http'
@Component({
  selector: 'app-merge-map',
  templateUrl: './merge-map.component.html',
  styleUrls: ['./merge-map.component.scss']
})
export class MergeMapComponent implements OnInit {

  autoGeneratedUserId$: Subject<any> = new Subject();

  constructor(private http: HttpClient) {
    setInterval(() => {
      this.autoGeneratedUserId$.next(Math.floor(Math.random() * 10))
    }, 3000)
  }

  ngOnInit(): void {

    // this.autoGeneratedUserId$
    from([1, 2, 3, 4, 5])
      .pipe(
        filter((value: number) => value > 0),
        mergeMap((userId: any) => {
          return this.getUserById(userId)
        })
      )
      .subscribe((data: any) => console.log(data))

  }

  getUserById(userId: number): Observable<any> {
    return this.http.get(`https://jsonplaceholder.typicode.com/users/${userId}`)
  }


}
